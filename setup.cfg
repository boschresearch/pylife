# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pylife
description = General Fatigue library
author = pyLife developer team @ Bosch Research
author_email = johannes.mueller4@de.bosch.com
license = Apache-2
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/boschresearch/pylife/
# Add here related links, for example:
project_urls =
    Documentation = https://pylife.readthedocs.io
    Source = https://github.com/boschresearch/pylife/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
    Download = https://pypi.org/project/pylife/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    numpy<1.22
    scipy
    pandas>=1.4.0
    h5py
    matplotlib
    cython

[options.packages.find]
where = src
exclude =
    tests
    demos
    tools
    docs
    batch_scripts

[options.extras_require]
testing =
    setuptools
    pytest
    pytest-cov
    hypothesis
    testbook[dev]

docs =
    sphinx
    m2r2
    nbsphinx
    nbsphinx-link
    plotly
    jupyter_sphinx
    myst_parser
    panel
    xvfbwrapper


analysis =
    flake8
    pep8-naming

tsfresh =
    tsfresh

pymc3 =
    pymc3
    numpy<1.22,>=1.18

all = %(tsfresh)s %(pymc3)s

extras =
    jupyter
    matplotlib
    plotly
    pyvista



[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --cov src/pylife --cov-append -m "not slow_acceptance and not demos"

norecursedirs =
    dist
    build
    .tox
testpaths = tests
markers =
	slow_acceptance: long running acceptance test (not run by default)
	demos: demo notebooks by testbook

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 120
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/source/conf.py
    .venv

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = pylife
extensions =
    no_skeleton
