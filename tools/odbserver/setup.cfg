[metadata]
name = pylife-odbserver
summary = A server for odbAccess to be acessed by pylife-odbclient
author = Johannes Mueller
author_email = johannes.mueller4@de.bosch.com
license = Apache-2
home_page = http://github.com/boschresearch/pylife
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = Programming Language :: Python

[entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = odbserver.module:function
# For example:
# console_scripts =
#     fibonacci = odbserver.skeleton:run
# as well as other entry_points.


[options]
packages =
    odbserver


[extras]
# Add here additional requirements for extra features, like:
# PDF =
#    ReportLab>=1.2
#    RXP

[test]
# py.test options when running `python setup.py test`
addopts = tests

[pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov odbserver --cov-report term-missing
    --verbose

[aliases]
docs = build_sphinx

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[pbr]
# Let pbr run sphinx-apidoc
autodoc_tree_index_modules = True
# autodoc_tree_excludes = ...
# Let pbr itself generate the apidoc
# autodoc_index_modules = True
# autodoc_exclude_modules = ...
# Convert warnings to errors
# warnerrors = True

[devpi:upload]
# Options for the devpi: PyPI serer and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel
