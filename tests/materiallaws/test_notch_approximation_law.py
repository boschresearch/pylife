# Copyright (c) 2019-2022 - for information on the respective copyright owner
# see the NOTICE file and/or the repository
# https://github.com/boschresearch/pylife
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

__author__ = "Benjamin Maier"
__maintainer__ = __author__

import pytest
import numpy as np
import pandas as pd

import pylife.strength.damage_parameter
from pylife.materiallaws.notch_approximation_law import ExtendedNeuber


def test_extended_neuber_example_1():
    """ example under 2.7.1, p.74 of FKM nonlinear "Akademisches Beispiel" """
    
    E = 206e3    # [MPa] Young's modulus
    K = 1184     # [MPa]
    n = 0.187    # [-]
    K_p = 3.5    # [-] (de: Traglastformzahl) K_p = F_plastic / F_yield (3.1.1)
    
    L = pd.Series([100, -200, 100, -250, 200, 0, 200, -200])
    c = 1.4
    gamma_L = (250+6.6)/250
    L = c * gamma_L * L
    
    # initialize notch approximation law and damage parameter
    notch_approximation_law = ExtendedNeuber(E, K, n, K_p)
    
    assert notch_approximation_law.E == E
    assert notch_approximation_law.K == K
    assert notch_approximation_law.n == n
    assert notch_approximation_law.K_p == K_p
    
    maximum_absolute_load = max(abs(L))
    
    # the FKM example seems to round here, real value is 359.24
    assert np.isclose(maximum_absolute_load, 359.3, rtol=1e-3)
    
    binned_notch_approximation_law = pylife.materiallaws.notch_approximation_law.Binned(
        notch_approximation_law, maximum_absolute_load)

    # some rows of PFAD are given in the FKM nonlinear example on p.76
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[0], \
        pd.Series([3.592, 0.0017e-2, 3.592]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[1], \
        pd.Series([7.185, 0.0035e-2, 7.185]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    # Note that the original FKM document has an error at this row (it is row 49, not 50)
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[48], \
        pd.Series([176.057, 8.71e-4, 172.639]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[99], \
        pd.Series([359.3, 0.0021, 299.78]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    # matrix AST on page 162, chapter 3.4.1
    expected_matrix_AST = pd.DataFrame(
        index=pd.Index(np.arange(1, 200+1), name="class_index"),
        columns=["delta_load", "delta_strain", "delta_stress"],
        data=[
            [3.592, 0.0017e-2, 3.592],
            [7.185, 0.0035e-2, 7.185],
            [10.777, 0.0052e-2, 10.777],
            [14.370, 0.0070e-2, 14.370],
            [17.962, 0.0087e-2, 17.962],
            [21.554, 0.0105e-2, 21.554],
            [25.147, 0.0122e-2, 25.147],
            [28.739, 0.0140e-2, 28.739],
            [32.332, 0.0157e-2, 32.332],
            [35.924, 0.0174e-2, 35.924],
            [39.516, 0.0192e-2, 39.516],
            [43.109, 0.0209e-2, 43.109],
            [46.701, 0.0227e-2, 46.701],
            [50.294, 0.0244e-2, 50.293],
            [53.886, 0.0262e-2, 53.886],
            [57.478, 0.0279e-2, 57.478],
            [61.071, 0.0296e-2, 61.070],
            [64.663, 0.0314e-2, 64.662],
            [68.256, 0.0331e-2, 68.254],
            [71.848, 0.0349e-2, 71.846],
            [75.440, 0.0366e-2, 75.438],
            [79.033, 0.0384e-2, 79.030],
            [82.625, 0.0401e-2, 82.622],
            [86.218, 0.0419e-2, 86.213],
            [89.810, 0.0436e-2, 89.805],
            [93.402, 0.0453e-2, 93.396],
            [96.995, 0.0471e-2, 96.987],
            [100.587, 0.0488e-2, 100.578],
            [104.180, 0.0506e-2, 104.168],
            [107.772, 0.0523e-2, 107.758],
            [111.364, 0.0541e-2, 111.348],
            [114.957, 0.0558e-2, 114.938],
            [118.549, 0.0576e-2, 118.526],
            [122.142, 0.0593e-2, 122.115],
            [125.734, 0.0611e-2, 125.703],
            [129.326, 0.0628e-2, 129.290],
            [132.919, 0.0645e-2, 132.877],
            [136.511, 0.0663e-2, 136.463],
            [140.104, 0.0680e-2, 140.048],
            [143.696, 0.0698e-2, 143.633],
            [147.288, 0.0715e-2, 147.216],
            [150.881, 0.0733e-2, 150.799],
            [154.473, 0.0750e-2, 154.380],
            [158.066, 0.0768e-2, 157.960],
            [161.658, 0.0785e-2, 161.539],
            [165.250, 0.0803e-2, 165.117],
            [168.843, 0.0820e-2, 168.693],
            [172.435, 0.0838e-2, 172.268],
            [176.028, 0.0855e-2, 175.841],
            [179.620, 0.0873e-2, 179.412],
            [183.212, 0.0891e-2, 182.981],
            [186.805, 0.0908e-2, 186.548],
            [190.397, 0.0926e-2, 190.113],
            [193.990, 0.0943e-2, 193.676],
            [197.582, 0.0961e-2, 197.236],
            [201.174, 0.0978e-2, 200.794],
            [204.767, 0.0996e-2, 204.349],
            [208.359, 0.1014e-2, 207.901],
            [211.952, 0.1031e-2, 211.450],
            [215.544, 0.1049e-2, 214.996],
            [219.136, 0.1067e-2, 218.539],
            [222.729, 0.1084e-2, 222.078],
            [226.321, 0.1102e-2, 225.613],
            [229.914, 0.1120e-2, 229.144],
            [233.506, 0.1138e-2, 232.671],
            [237.098, 0.1155e-2, 236.193],
            [240.691, 0.1173e-2, 239.711],
            [244.283, 0.1191e-2, 243.225],
            [247.876, 0.1209e-2, 246.733],
            [251.468, 0.1227e-2, 250.236],
            [255.060, 0.1245e-2, 253.734],
            [258.653, 0.1263e-2, 257.226],
            [262.245, 0.1281e-2, 260.712],
            [265.838, 0.1299e-2, 264.192],
            [269.430, 0.1317e-2, 267.666],
            [273.022, 0.1335e-2, 271.133],
            [276.615, 0.1353e-2, 274.593],
            [280.207, 0.1371e-2, 278.046],
            [283.800, 0.1389e-2, 281.492],
            [287.392, 0.1407e-2, 284.930],
            [290.984, 0.1426e-2, 288.361],
            [294.577, 0.1444e-2, 291.783],
            [298.169, 0.1462e-2, 295.197],
            [301.762, 0.1481e-2, 298.602],
            [305.354, 0.1499e-2, 301.998],
            [308.946, 0.1517e-2, 305.386],
            [312.539, 0.1536e-2, 308.763],
            [316.131, 0.1554e-2, 312.132],
            [319.724, 0.1573e-2, 315.490],
            [323.316, 0.1592e-2, 318.838],
            [326.908, 0.1610e-2, 322.175],
            [330.501, 0.1629e-2, 325.502],
            [334.093, 0.1648e-2, 328.818],
            [337.686, 0.1667e-2, 332.123],
            [341.278, 0.1686e-2, 335.416],
            [344.870, 0.1705e-2, 338.698],
            [348.463, 0.1724e-2, 341.967],
            [352.055, 0.1743e-2, 345.225],
            [355.648, 0.1762e-2, 348.470],
            [359.240, 0.1782e-2, 351.702],
            [362.832, 0.1801e-2, 354.922],
            [366.425, 0.1820e-2, 358.128],
            [370.017, 0.1840e-2, 361.321],
            [373.610, 0.1859e-2, 364.501],
            [377.202, 0.1879e-2, 367.667],
            [380.794, 0.1899e-2, 370.819],
            [384.387, 0.1919e-2, 373.957],
            [387.979, 0.1938e-2, 377.081],
            [391.572, 0.1958e-2, 380.190],
            [395.164, 0.1978e-2, 383.285],
            [398.756, 0.1998e-2, 386.365],
            [402.349, 0.2019e-2, 389.430],
            [405.941, 0.2039e-2, 392.480],
            [409.534, 0.2059e-2, 395.515],
            [413.126, 0.2080e-2, 398.534],
            [416.718, 0.2100e-2, 401.538],
            [420.311, 0.2121e-2, 404.526],
            [423.903, 0.2142e-2, 407.499],
            [427.496, 0.2162e-2, 410.456],
            [431.088, 0.2183e-2, 413.397],
            [434.680, 0.2204e-2, 416.322],
            [438.273, 0.2225e-2, 419.231],
            [441.865, 0.2246e-2, 422.124],
            [445.458, 0.2268e-2, 425.001],
            [449.050, 0.2289e-2, 427.862],
            [452.642, 0.2311e-2, 430.706],
            [456.235, 0.2332e-2, 433.534],
            [459.827, 0.2354e-2, 436.346],
            [463.420, 0.2375e-2, 439.142],
            [467.012, 0.2397e-2, 441.921],
            [470.604, 0.2419e-2, 444.683],
            [474.197, 0.2441e-2, 447.430],
            [477.789, 0.2463e-2, 450.159],
            [481.382, 0.2486e-2, 452.873],
            [484.974, 0.2508e-2, 455.570],
            [488.566, 0.2531e-2, 458.251],
            [492.159, 0.2553e-2, 460.915],
            [495.751, 0.2576e-2, 463.563],
            [499.344, 0.2599e-2, 466.195],
            [502.936, 0.2621e-2, 468.811],
            [506.528, 0.2644e-2, 471.411],
            [510.121, 0.2668e-2, 473.994],
            [513.713, 0.2691e-2, 476.561],
            [517.306, 0.2714e-2, 479.113],
            [520.898, 0.2738e-2, 481.648],
            [524.490, 0.2761e-2, 484.168],
            [528.083, 0.2785e-2, 486.672],
            [531.675, 0.2808e-2, 489.160],
            [535.268, 0.2832e-2, 491.632],
            [538.860, 0.2856e-2, 494.089],
            [542.452, 0.2880e-2, 496.531],
            [546.045, 0.2905e-2, 498.957],
            [549.637, 0.2929e-2, 501.368],
            [553.230, 0.2953e-2, 503.763],
            [556.822, 0.2978e-2, 506.144],
            [560.414, 0.3002e-2, 508.510],
            [564.007, 0.3027e-2, 510.860],
            [567.599, 0.3052e-2, 513.196],
            [571.192, 0.3077e-2, 515.518],
            [574.784, 0.3102e-2, 517.824],
            [578.376, 0.3127e-2, 520.117],
            [581.969, 0.3153e-2, 522.395],
            [585.561, 0.3178e-2, 524.658],
            [589.154, 0.3203e-2, 526.908],
            [592.746, 0.3229e-2, 529.144],
            [596.338, 0.3255e-2, 531.365],
            [599.931, 0.3281e-2, 533.573],
            [603.523, 0.3307e-2, 535.768],
            [607.116, 0.3333e-2, 537.948],
            [610.708, 0.3359e-2, 540.116],
            [614.300, 0.3385e-2, 542.270],
            [617.893, 0.3412e-2, 544.411],
            [621.485, 0.3438e-2, 546.539],
            [625.078, 0.3465e-2, 548.654],
            [628.670, 0.3492e-2, 550.756],
            [632.262, 0.3519e-2, 552.845],
            [635.855, 0.3546e-2, 554.922],
            [639.447, 0.3573e-2, 556.986],
            [643.040, 0.3600e-2, 559.038],
            [646.632, 0.3627e-2, 561.078],
            [650.224, 0.3655e-2, 563.106],
            [653.817, 0.3682e-2, 565.122],
            [657.409, 0.3710e-2, 567.126],
            [661.002, 0.3738e-2, 569.118],
            [664.594, 0.3766e-2, 571.098],
            [668.186, 0.3794e-2, 573.067],
            [671.779, 0.3822e-2, 575.025],
            [675.371, 0.3850e-2, 576.971],
            [678.964, 0.3878e-2, 578.906],
            [682.556, 0.3907e-2, 580.830],
            [686.148, 0.3935e-2, 582.744],
            [689.741, 0.3964e-2, 584.646],
            [693.333, 0.3993e-2, 586.537],
            [696.926, 0.4022e-2, 588.418],
            [700.518, 0.4051e-2, 590.289],
            [704.110, 0.4080e-2, 592.149],
            [707.703, 0.4109e-2, 593.999],
            [711.295, 0.4138e-2, 595.839],
            [714.888, 0.4168e-2, 597.668],
            [718.480, 0.4198e-2, 599.488]
        ])
    
    pd.testing.assert_frame_equal(
        binned_notch_approximation_law._lut_secondary_branch, expected_matrix_AST, rtol=1e-3, atol=1e-5)


def test_extended_neuber_example_2():
    """ example under 2.7.2, p.78 of FKM nonlinear, "Welle mit V-Kerbe" """
    
    E = 206e3    # [MPa] Young's modulus
    K = 2650.5   # [MPa]
    n = 0.187    # [-]
    K_p = 3.5    # [-] (de: Traglastformzahl) K_p = F_plastic / F_yield (3.1.1)
    
    L = 1266.25 * pd.Series([0.3, -0.3, 0.5, -0.5, 0.6, -0.6, 0.3, -0.3, 0.7, -0.7, 0.2, -0.2, 0.6, -0.6, 0.8, -0.8, 0.8, -0.8])
    
    # initialize notch approximation law and damage parameter
    notch_approximation_law = ExtendedNeuber(E, K, n, K_p)
    
    maximum_absolute_load = max(abs(L))
    
    # the FKM example seems to round here, real value is 359.24
    assert np.isclose(maximum_absolute_load, 1013, rtol=1e-3)
    
    binned_notch_approximation_law = pylife.materiallaws.notch_approximation_law.Binned(
        notch_approximation_law, maximum_absolute_load)

    # some rows of PFAD are given in the FKM nonlinear example on p.79
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[0], \
        pd.Series([10.13, 0.0049e-2, 10.130]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[1], \
        pd.Series([20.26, 0.0098e-2, 20.260]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    # this row seems off in the FKM nonlinear example, error is as high as 5%
    pd.testing.assert_series_equal(binned_notch_approximation_law._lut_primary_branch.iloc[99], \
        pd.Series([1013.00, 0.6035e-2, 829.681]), check_names=False, check_index=False, rtol=1e-3, atol=1e-5)
    
    # test binning directly
    assert np.isclose(binned_notch_approximation_law.stress(10.13), 10.130)
    assert np.isclose(binned_notch_approximation_law.strain(10.30, 10.13), 0.0049174e-2)
    
    assert np.isclose(binned_notch_approximation_law.stress_secondary_branch(10.13), 10.130)
    assert np.isclose(binned_notch_approximation_law.strain_secondary_branch(10.30, 10.13), 0.0049174e-2)
    
    # matrix AST on page 171, chapter 3.4.2
    expected_matrix_AST = pd.DataFrame(
        index=pd.Index(np.arange(1, 200+1), name="class_index"),
        columns=["delta_load", "delta_strain", "delta_stress"],
        data=[
            [10.13, 0.0049e-2, 10.130],
            [20.26, 0.0098e-2, 20.260],
            [30.39, 0.0148e-2, 30.390],
            [40.52, 0.0197e-2, 40.520],
            [50.65, 0.0246e-2, 50.650],
            [60.78, 0.0295e-2, 60.780],
            [70.91, 0.0344e-2, 70.910],
            [81.04, 0.0393e-2, 81.040],
            [91.17, 0.0443e-2, 91.170],
            [101.30, 0.0492e-2, 101.300],
            [111.43, 0.0541e-2, 111.430],
            [121.56, 0.0590e-2, 121.560],
            [131.69, 0.0639e-2, 131.689],
            [141.82, 0.0688e-2, 141.819],
            [151.95, 0.0738e-2, 151.949],
            [162.08, 0.0787e-2, 162.078],
            [172.21, 0.0836e-2, 172.208],
            [182.34, 0.0885e-2, 182.337],
            [192.47, 0.0934e-2, 192.466],
            [202.60, 0.0984e-2, 202.595],
            [212.73, 0.1033e-2, 212.723],
            [222.86, 0.1082e-2, 222.851],
            [232.99, 0.1131e-2, 232.979],
            [243.12, 0.1180e-2, 243.106],
            [253.25, 0.1229e-2, 253.232],
            [263.38, 0.1279e-2, 263.358],
            [273.51, 0.1328e-2, 273.483],
            [283.64, 0.1377e-2, 283.608],
            [293.77, 0.1426e-2, 293.731],
            [303.90, 0.1475e-2, 303.853],
            [314.03, 0.1525e-2, 313.974],
            [324.16, 0.1574e-2, 324.094],
            [334.29, 0.1623e-2, 334.212],
            [344.42, 0.1672e-2, 344.328],
            [354.55, 0.1722e-2, 354.443],
            [364.68, 0.1771e-2, 364.556],
            [374.81, 0.1820e-2, 374.666],
            [384.94, 0.1869e-2, 384.774],
            [395.07, 0.1919e-2, 394.879],
            [405.20, 0.1968e-2, 404.982],
            [415.33, 0.2017e-2, 415.081],
            [425.46, 0.2067e-2, 425.177],
            [435.59, 0.2116e-2, 435.269],
            [445.72, 0.2165e-2, 445.357],
            [455.85, 0.2215e-2, 455.441],
            [465.98, 0.2264e-2, 465.520],
            [476.11, 0.2314e-2, 475.595],
            [486.24, 0.2363e-2, 485.664],
            [496.37, 0.2413e-2, 495.727],
            [506.50, 0.2462e-2, 505.784],
            [516.63, 0.2512e-2, 515.834],
            [526.76, 0.2561e-2, 525.878],
            [536.89, 0.2611e-2, 535.914],
            [547.02, 0.2661e-2, 545.943],
            [557.15, 0.2710e-2, 555.963],
            [567.28, 0.2760e-2, 565.974],
            [577.41, 0.2810e-2, 575.976],
            [587.54, 0.2860e-2, 585.968],
            [597.67, 0.2910e-2, 595.949],
            [607.80, 0.2960e-2, 605.920],
            [617.93, 0.3010e-2, 615.879],
            [628.06, 0.3060e-2, 625.826],
            [638.19, 0.3110e-2, 635.760],
            [648.32, 0.3160e-2, 645.680],
            [658.45, 0.3210e-2, 655.587],
            [668.58, 0.3261e-2, 665.479],
            [678.71, 0.3311e-2, 675.355],
            [688.84, 0.3362e-2, 685.215],
            [698.97, 0.3412e-2, 695.059],
            [709.10, 0.3463e-2, 704.885],
            [719.23, 0.3514e-2, 714.692],
            [729.36, 0.3565e-2, 724.481],
            [739.49, 0.3616e-2, 734.250],
            [749.62, 0.3667e-2, 743.998],
            [759.75, 0.3718e-2, 753.725],
            [769.88, 0.3769e-2, 763.430],
            [780.01, 0.3821e-2, 773.112],
            [790.14, 0.3872e-2, 782.770],
            [800.27, 0.3924e-2, 792.404],
            [810.40, 0.3975e-2, 802.013],
            [820.53, 0.4027e-2, 811.595],
            [830.66, 0.4079e-2, 821.151],
            [840.79, 0.4132e-2, 830.679],
            [850.92, 0.4184e-2, 840.179],
            [861.05, 0.4236e-2, 849.649],
            [871.18, 0.4289e-2, 859.089],
            [881.31, 0.4342e-2, 868.499],
            [891.44, 0.4395e-2, 877.876],
            [901.57, 0.4448e-2, 887.221],
            [911.70, 0.4501e-2, 896.533],
            [921.83, 0.4555e-2, 905.811],
            [931.96, 0.4608e-2, 915.055],
            [942.09, 0.4662e-2, 924.263],
            [952.22, 0.4716e-2, 933.434],
            [962.35, 0.4771e-2, 942.569],
            [972.48, 0.4825e-2, 951.666],
            [982.61, 0.4880e-2, 960.725],
            [992.74, 0.4935e-2, 969.745],
            [1002.87, 0.4990e-2, 978.725],
            [1013.00, 0.5045e-2, 987.665],
            [1023.13, 0.5100e-2, 996.564],
            [1033.26, 0.5156e-2, 1005.422],
            [1043.39, 0.5212e-2, 1014.237],
            [1053.52, 0.5268e-2, 1023.011],
            [1063.65, 0.5325e-2, 1031.741],
            [1073.78, 0.5381e-2, 1040.427],
            [1083.91, 0.5438e-2, 1049.070],
            [1094.04, 0.5495e-2, 1057.668],
            [1104.17, 0.5553e-2, 1066.221],
            [1114.30, 0.5611e-2, 1074.729],
            [1124.43, 0.5668e-2, 1083.191],
            [1134.56, 0.5727e-2, 1091.607],
            [1144.69, 0.5785e-2, 1099.977],
            [1154.82, 0.5844e-2, 1108.300],
            [1164.95, 0.5903e-2, 1116.576],
            [1175.08, 0.5962e-2, 1124.805],
            [1185.21, 0.6022e-2, 1132.987],
            [1195.34, 0.6081e-2, 1141.121],
            [1205.47, 0.6142e-2, 1149.207],
            [1215.60, 0.6202e-2, 1157.245],
            [1225.73, 0.6263e-2, 1165.235],
            [1235.86, 0.6324e-2, 1173.177],
            [1245.99, 0.6385e-2, 1181.070],
            [1256.12, 0.6446e-2, 1188.916],
            [1266.25, 0.6508e-2, 1196.712],
            [1276.38, 0.6570e-2, 1204.461],
            [1286.51, 0.6633e-2, 1212.161],
            [1296.64, 0.6696e-2, 1219.813],
            [1306.77, 0.6759e-2, 1227.416],
            [1316.90, 0.6822e-2, 1234.971],
            [1327.03, 0.6886e-2, 1242.478],
            [1337.16, 0.6950e-2, 1249.937],
            [1347.29, 0.7014e-2, 1257.348],
            [1357.42, 0.7079e-2, 1264.711],
            [1367.55, 0.7144e-2, 1272.027],
            [1377.68, 0.7209e-2, 1279.295],
            [1387.81, 0.7275e-2, 1286.515],
            [1397.94, 0.7340e-2, 1293.689],
            [1408.07, 0.7407e-2, 1300.816],
            [1418.20, 0.7473e-2, 1307.895],
            [1428.33, 0.7540e-2, 1314.929],
            [1438.46, 0.7607e-2, 1321.916],
            [1448.59, 0.7675e-2, 1328.857],
            [1458.72, 0.7743e-2, 1335.753],
            [1468.85, 0.7811e-2, 1342.603],
            [1478.98, 0.7879e-2, 1349.408],
            [1489.11, 0.7948e-2, 1356.168],
            [1499.24, 0.8017e-2, 1362.884],
            [1509.37, 0.8087e-2, 1369.555],
            [1519.50, 0.8156e-2, 1376.182],
            [1529.63, 0.8226e-2, 1382.766],
            [1539.76, 0.8297e-2, 1389.307],
            [1549.89, 0.8368e-2, 1395.804],
            [1560.02, 0.8439e-2, 1402.259],
            [1570.15, 0.8510e-2, 1408.672],
            [1580.28, 0.8582e-2, 1415.043],
            [1590.41, 0.8654e-2, 1421.372],
            [1600.54, 0.8726e-2, 1427.660],
            [1610.67, 0.8799e-2, 1433.908],
            [1620.80, 0.8872e-2, 1440.114],
            [1630.93, 0.8946e-2, 1446.281],
            [1641.06, 0.9019e-2, 1452.408],
            [1651.19, 0.9094e-2, 1458.496],
            [1661.32, 0.9168e-2, 1464.544],
            [1671.45, 0.9243e-2, 1470.554],
            [1681.58, 0.9318e-2, 1476.526],
            [1691.71, 0.9393e-2, 1482.459],
            [1701.84, 0.9469e-2, 1488.356],
            [1711.97, 0.9545e-2, 1494.215],
            [1722.10, 0.9621e-2, 1500.037],
            [1732.23, 0.9698e-2, 1505.823],
            [1742.36, 0.9775e-2, 1511.572],
            [1752.49, 0.9853e-2, 1517.286],
            [1762.62, 0.9931e-2, 1522.965],
            [1772.75, 1.0009e-2, 1528.609],
            [1782.88, 1.0087e-2, 1534.218],
            [1793.01, 1.0166e-2, 1539.793],
            [1803.14, 1.0245e-2, 1545.334],
            [1813.27, 1.0324e-2, 1550.841],
            [1823.40, 1.0404e-2, 1556.316],
            [1833.53, 1.0484e-2, 1561.757],
            [1843.66, 1.0565e-2, 1567.166],
            [1853.79, 1.0645e-2, 1572.543],
            [1863.92, 1.0726e-2, 1577.888],
            [1874.05, 1.0808e-2, 1583.202],
            [1884.18, 1.0890e-2, 1588.485],
            [1894.31, 1.0972e-2, 1593.737],
            [1904.44, 1.1054e-2, 1598.958],
            [1914.57, 1.1137e-2, 1604.149],
            [1924.70, 1.1220e-2, 1609.311],
            [1934.83, 1.1303e-2, 1614.443],
            [1944.96, 1.1387e-2, 1619.547],
            [1955.09, 1.1471e-2, 1624.621],
            [1965.22, 1.1556e-2, 1629.667],
            [1975.35, 1.1641e-2, 1634.685],
            [1985.48, 1.1726e-2, 1639.675],
            [1995.61, 1.1811e-2, 1644.637],
            [2005.74, 1.1897e-2, 1649.573],
            [2015.87, 1.1983e-2, 1654.481],
            [2026.00, 1.2069e-2, 1659.363]
        ])
    
    pd.testing.assert_frame_equal(
        binned_notch_approximation_law._lut_secondary_branch, expected_matrix_AST, rtol=1e-3, atol=1e-5)

@pytest.mark.parametrize('stress, load', [
    (22, 42),
    (40, 40),
    (120, 80),
    (220, 180),
    (320, 180)
])
def test_derivatives(stress, load):
    """ Test the analytically derived derivatives of stress and strain formulas """
    
    E = 206e3    # [MPa] Young's modulus
    K = 1184     # [MPa]
    n = 0.187    # [-]
    K_p = 3.5    # [-] (de: Traglastformzahl) K_p = F_plastic / F_yield (3.1.1)
    
    
    # initialize notch approximation law and damage parameter
    notch_approximation_law = ExtendedNeuber(E, K, n, K_p)
    
    load = np.array(load, dtype=float)
    stress = np.array(stress, dtype=float)
    h = 0.1
    
    # test derivative of stress
    numeric_derivative = (notch_approximation_law._stress_implicit(stress+h, load) - notch_approximation_law._stress_implicit(stress-h, load)) / (2*h)
    derivative = notch_approximation_law._d_stress_implicit(stress, load)
    
    assert np.isclose(numeric_derivative, derivative)
    
    # test derivative of secondary_stress
    numeric_derivative = (notch_approximation_law._stress_secondary_implicit(stress+h, load) - notch_approximation_law._stress_secondary_implicit(stress-h, load)) / (2*h)
    derivative = notch_approximation_law._d_stress_secondary_implicit(stress, load)
    
    assert np.isclose(numeric_derivative, derivative)
    